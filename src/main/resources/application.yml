spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

server:
  servlet:
    context-path: /api
  port: ${SERVER_PORT:8080}

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: ${SWAGGER_ENABLED:true}
  swagger-ui:
    path: /swagger-ui.html
    enabled: ${SWAGGER_ENABLED:true}
    try-it-out-enabled: true
  show-actuator: false

logging:
  level:
    com.curootest.clientback: ${LOG_LEVEL:DEBUG}
    org.springframework.security: ${SECURITY_LOG_LEVEL:DEBUG}

management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info}
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:when-authorized}

---
spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/curooclientback}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:super-secure-password}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:5}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:20000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
  jpa:
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:update}
    show-sql: ${HIBERNATE_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: ${HIBERNATE_FORMAT_SQL:false}
        dialect: org.hibernate.dialect.PostgreSQLDialect
  config:
    activate:
      on-profile: "dev"

server:
  port: ${SERVER_PORT:8080}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200}

security:
  jwt:
    token:
      secret-key: ${JWT_SECRET_KEY:3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b}
      expire-length: ${JWT_EXPIRATION_MS:3600000}

---
spring:
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_MIN_IDLE:10}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:20000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
  jpa:
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:validate}
    show-sql: ${HIBERNATE_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: ${HIBERNATE_FORMAT_SQL:false}
        dialect: org.hibernate.dialect.PostgreSQLDialect
  config:
    activate:
      on-profile: "prod"

server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: ${SERVER_COMPRESSION:true}
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

security:
  jwt:
    token:
      secret-key: ${JWT_SECRET_KEY}
      expire-length: ${JWT_EXPIRATION_MS:7200000}

# Production logging configuration
logging:
  level:
    com.curootest.clientback: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.springframework.web: ${WEB_LOG_LEVEL:WARN}
    org.hibernate: ${HIBERNATE_LOG_LEVEL:WARN}

# Production management endpoints
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,metrics,prometheus}
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:when-authorized}
    metrics:
      enabled: ${METRICS_ENABLED:true}

# Production Swagger configuration
springdoc:
  api-docs:
    enabled: ${SWAGGER_ENABLED:false}
  swagger-ui:
    enabled: ${SWAGGER_ENABLED:false}
