services:
  app:
    image: ${DOCKER_REGISTRY:-localhost}/clientback:${APP_VERSION:-latest}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      HIBERNATE_DDL_AUTO: validate
      SWAGGER_ENABLED: false
      LOG_LEVEL: INFO
      SECURITY_LOG_LEVEL: WARN
      DB_POOL_SIZE: ${DB_POOL_SIZE:-25}
      DB_MIN_IDLE: ${DB_MIN_IDLE:-15}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-7200000}
      SERVER_COMPRESSION: true
      ACTUATOR_ENDPOINTS: health,info,metrics
      HEALTH_SHOW_DETAILS: when-authorized
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup:/backup
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: always

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
